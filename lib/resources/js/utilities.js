// Generated by CoffeeScript 1.5.0
(function() {
  var utilitiesApp;

  utilitiesApp = angular.module('h2o.utilities', []);

  utilitiesApp.directive("blurOnEnter", function() {
    return {
      restrict: 'A',
      link: function(scope, element, attrs) {
        var jqElement;
        if (attrs.type === 'radio' || attrs.type === 'checkbox') {
          return;
        }
        jqElement = $(element);
        return element.bind('keydown', function(e) {
          if (e.which === 13) {
            return jqElement.blur();
          }
        });
      }
    };
  });

  utilitiesApp.filter("humanizeFilesize", function() {
    return function(input) {
      return humanize.filesize(input);
    };
  });

  utilitiesApp.filter("minZero", function() {
    return function(input) {
      if (input < 0) {
        return 0;
      } else {
        return input;
      }
    };
  });

  if (!Array.prototype.filter) {
    Array.prototype.filter = function(callback) {
      var element, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = this.length; _i < _len; _i++) {
        element = this[_i];
        if (callback(element)) {
          _results.push(element);
        }
      }
      return _results;
    };
  }

  if (!Array.prototype.sum) {
    Array.prototype.sum = function() {
      var i, result, _i, _ref;
      result = 0;
      for (i = _i = 0, _ref = this.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        result += this[i];
      }
      return result;
    };
  }

}).call(this);
